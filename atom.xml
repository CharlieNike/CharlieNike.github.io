<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CharlieNike</title>
  
  <subtitle>房玉辉区块链博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-05-08T15:43:56.272Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>房玉辉</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>在本地网络部署super—dictionary智能合约</title>
    <link href="http://yoursite.com/2018/05/03/%E5%9C%A8localhost%E9%83%A8%E7%BD%B2super%E2%80%94dictionary%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/"/>
    <id>http://yoursite.com/2018/05/03/在localhost部署super—dictionary智能合约/</id>
    <published>2018-05-03T02:10:00.000Z</published>
    <updated>2018-05-08T15:43:56.272Z</updated>
    
    <content type="html"><![CDATA[<h5 id="整理：房玉辉"><a href="#整理：房玉辉" class="headerlink" title="整理：房玉辉"></a>整理：房玉辉</h5><h5 id="博客：https-charlienike-github-io"><a href="#博客：https-charlienike-github-io" class="headerlink" title="博客：https://charlienike.github.io"></a>博客：<a href="https://charlienike.github.io" target="_blank" rel="noopener">https://charlienike.github.io</a></h5><h3 id="星云链Dapp开发系列"><a href="#星云链Dapp开发系列" class="headerlink" title="星云链Dapp开发系列"></a><a href="https://charlienike.github.io/tags/星云链Dapp开发/" target="_blank" rel="noopener">星云链Dapp开发系列</a></h3><h4 id="在本地网络（localhost）部署super-dictionary智能合约"><a href="#在本地网络（localhost）部署super-dictionary智能合约" class="headerlink" title="在本地网络（localhost）部署super-dictionary智能合约"></a>在本地网络（localhost）部署super-dictionary智能合约</h4><p>super-dictionary智能合约源码下载地址：<a href="https://github.com/15010159959/super-dictionary" target="_blank" rel="noopener">https://github.com/15010159959/super-dictionary</a></p><h6 id="1、解决本地交易网络错误问题："><a href="#1、解决本地交易网络错误问题：" class="headerlink" title="1、解决本地交易网络错误问题："></a>1、解决本地交易网络错误问题：</h6><p>进入go/src/github.com/nebulasio/go-nebulas/conf/default文件夹，打开config.conf文件，找到以下代码：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">rpc &#123;</span><br><span class="line">    rpc_listen: [<span class="string">"0.0.0.0:8684"</span>]</span><br><span class="line">    http_listen: [<span class="string">"0.0.0.0:8685"</span>]</span><br><span class="line">    http_module: [<span class="string">"api"</span>,<span class="string">"admin"</span>]</span><br><span class="line">    # HTTP CORS allowed origins</span><br><span class="line">    # http_cors: []</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>去掉最后一行代码的注释，并更改如下：<br><code>http_cors: [&quot;*&quot;]</code></p><a id="more"></a><h6 id="2、进入super-dictionary-master-lib文件夹："><a href="#2、进入super-dictionary-master-lib文件夹：" class="headerlink" title="2、进入super-dictionary-master/lib文件夹："></a>2、进入super-dictionary-master/lib文件夹：</h6><p>打开nebPay.js文件：<br>找到第四行代码：<br><code>var payUrl = &quot;http://18.221.150.42/api/pay&quot;;</code><br>更改为：<br><code>var payUrl = &quot;http://localhost:8685/api/pay&quot;;</code></p><h6 id="3、启动节点："><a href="#3、启动节点：" class="headerlink" title="3、启动节点："></a>3、启动节点：</h6><p>打开第一个终端窗口，启动第一个星云节点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd $GOPATH/src/github.com/nebulasio/go-nebulas</span><br><span class="line">./neb -c conf/default/config.conf</span><br></pre></td></tr></table></figure><p>再打开一个终端窗口，启动第一个矿工节点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd $GOPATH/src/github.com/nebulasio/go-nebulas</span><br><span class="line">./neb -c conf/example/miner.conf</span><br></pre></td></tr></table></figure><h6 id="4、部署合约："><a href="#4、部署合约：" class="headerlink" title="4、部署合约："></a>4、部署合约：</h6><p>打开web-wallet钱包，部署super-dictionary智能合约到星云链localhost网络：<br>进入web-wallet文件夹，用浏览器打开index.html文件，点击合约，再点击部署，找到super-dictionary-master/smartContract文件夹下的super-dictionary.js文件，将全部代码粘贴到合约代码框内：<br><img src="http://p83c9zj44.bkt.clouddn.com/%E9%83%A8%E7%BD%B2%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6.jpeg" alt=""><br>选择钱包文件，输入密码，点击解锁，再点击测试，<br><img src="http://p83c9zj44.bkt.clouddn.com/%E6%B5%8B%E8%AF%95.jpeg" alt=""><br>再点击提交：<br><img src="http://p83c9zj44.bkt.clouddn.com/%E6%8F%90%E4%BA%A4.jpeg" alt=""><br>保存好合约地址：<br><code>n1wfeKn7GSjo8GbAE64CgUPyxwqLrpWWLnK</code><br>点击交易哈希，查看交易状态，下图为部署成功：<br><img src="http://p83c9zj44.bkt.clouddn.com/%E9%83%A8%E7%BD%B2%E6%88%90%E5%8A%9F.png" alt=""></p><h6 id="5、执行、调用合约，与前端交互："><a href="#5、执行、调用合约，与前端交互：" class="headerlink" title="5、执行、调用合约，与前端交互："></a>5、执行、调用合约，与前端交互：</h6><p>进入super-dictionary-master文件夹，用开发工具打开index.html文件，找到第190行代码，将合约地址粘贴过来：<br><code>var dappAddress = &quot;n1wfeKn7GSjo8GbAE64CgUPyxwqLrpWWLnK&quot;;</code><br>保存后，用浏览器打开index.html文件，随便输入“比特币”一词，可以看到，没有释义，但是底下有一句话：</p><blockquote><p>Failed to find related information. Do you want to add infromation for “比特币”?</p></blockquote><p><img src="http://p83c9zj44.bkt.clouddn.com/%E6%89%A7%E8%A1%8C%E5%90%88%E7%BA%A6.jpeg" alt=""><br>并且add可以点击，点击add后可以添加释义，输入如下释义：<br>“比特币（BitCoin）的概念最初由中本聪在2009年提出，根据中本聪的思路设计发布的开源软件以及建构其上的P2P网络。比特币是一种P2P形式的数字货币。”<br><img src="http://p83c9zj44.bkt.clouddn.com/%E6%B7%BB%E5%8A%A0%E9%87%8A%E4%B9%89.jpeg" alt=""><br>点击submit，之后会弹出WebExtensionWallet钱包页面，选择localhost当地钱包文件，输入密码“passphrase”，<br><img src="http://p83c9zj44.bkt.clouddn.com/%E6%8F%90%E4%BA%A4submit.jpeg" alt=""><br>点击生成交易，<br><img src="http://p83c9zj44.bkt.clouddn.com/%E7%94%9F%E6%88%90%E4%BA%A4%E6%98%93.jpeg" alt=""><br>再点击交易确认，<br><img src="http://p83c9zj44.bkt.clouddn.com/%E4%BA%A4%E6%98%93%E7%A1%AE%E8%AE%A4.jpeg" alt=""><br>正在打包：<br><img src="http://p83c9zj44.bkt.clouddn.com/%E7%A1%AE%E8%AE%A4.jpeg" alt=""><br>交易打包成功：<br><img src="http://p83c9zj44.bkt.clouddn.com/%E9%87%8A%E4%B9%89%E6%88%90%E5%8A%9F.jpeg" alt=""><br>查询，如图所示：<br><img src="http://p83c9zj44.bkt.clouddn.com/local%E6%9F%A5%E8%AF%8D.jpeg" alt=""><br>至此，super-dictionary智能合约部署成功，前端调用合约成功。</p><font color="#FF0000" size="5">版权声明：博客中的文章版权归博主所有，未经授权，禁止转载，转载请注明出处，合作请点击“关于我”，扫码添加微信</font>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;整理：房玉辉&quot;&gt;&lt;a href=&quot;#整理：房玉辉&quot; class=&quot;headerlink&quot; title=&quot;整理：房玉辉&quot;&gt;&lt;/a&gt;整理：房玉辉&lt;/h5&gt;&lt;h5 id=&quot;博客：https-charlienike-github-io&quot;&gt;&lt;a href=&quot;#博客：https-charlienike-github-io&quot; class=&quot;headerlink&quot; title=&quot;博客：https://charlienike.github.io&quot;&gt;&lt;/a&gt;博客：&lt;a href=&quot;https://charlienike.github.io&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://charlienike.github.io&lt;/a&gt;&lt;/h5&gt;&lt;h3 id=&quot;星云链Dapp开发系列&quot;&gt;&lt;a href=&quot;#星云链Dapp开发系列&quot; class=&quot;headerlink&quot; title=&quot;星云链Dapp开发系列&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://charlienike.github.io/tags/星云链Dapp开发/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;星云链Dapp开发系列&lt;/a&gt;&lt;/h3&gt;&lt;h4 id=&quot;在本地网络（localhost）部署super-dictionary智能合约&quot;&gt;&lt;a href=&quot;#在本地网络（localhost）部署super-dictionary智能合约&quot; class=&quot;headerlink&quot; title=&quot;在本地网络（localhost）部署super-dictionary智能合约&quot;&gt;&lt;/a&gt;在本地网络（localhost）部署super-dictionary智能合约&lt;/h4&gt;&lt;p&gt;super-dictionary智能合约源码下载地址：&lt;a href=&quot;https://github.com/15010159959/super-dictionary&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/15010159959/super-dictionary&lt;/a&gt;&lt;/p&gt;
&lt;h6 id=&quot;1、解决本地交易网络错误问题：&quot;&gt;&lt;a href=&quot;#1、解决本地交易网络错误问题：&quot; class=&quot;headerlink&quot; title=&quot;1、解决本地交易网络错误问题：&quot;&gt;&lt;/a&gt;1、解决本地交易网络错误问题：&lt;/h6&gt;&lt;p&gt;进入go/src/github.com/nebulasio/go-nebulas/conf/default文件夹，打开config.conf文件，找到以下代码：&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;rpc &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rpc_listen: [&lt;span class=&quot;string&quot;&gt;&quot;0.0.0.0:8684&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    http_listen: [&lt;span class=&quot;string&quot;&gt;&quot;0.0.0.0:8685&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    http_module: [&lt;span class=&quot;string&quot;&gt;&quot;api&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;admin&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # HTTP CORS allowed origins&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # http_cors: []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;去掉最后一行代码的注释，并更改如下：&lt;br&gt;&lt;code&gt;http_cors: [&amp;quot;*&amp;quot;]&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="智能合约" scheme="http://yoursite.com/categories/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/"/>
    
    
      <category term="星云链Dapp开发" scheme="http://yoursite.com/tags/%E6%98%9F%E4%BA%91%E9%93%BEDapp%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>用go语言简单实现SHA256哈希算法</title>
    <link href="http://yoursite.com/2018/05/01/%E7%94%A8go%E8%AF%AD%E8%A8%80%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0SHA256%E5%93%88%E5%B8%8C%E7%AE%97%E6%B3%95%EF%BC%9A/"/>
    <id>http://yoursite.com/2018/05/01/用go语言简单实现SHA256哈希算法：/</id>
    <published>2018-05-01T15:36:20.000Z</published>
    <updated>2018-05-12T04:50:29.795Z</updated>
    
    <content type="html"><![CDATA[<p>用go语言简单实现SHA256哈希算法：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"crypto/sha256"</span></span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">string</span> := <span class="string">"Hello"</span>  <span class="comment">//需要哈希的字符串内容</span></span><br><span class="line"></span><br><span class="line">hash := sha256.New()   <span class="comment">//声明sha256哈希函数</span></span><br><span class="line">hash.Write([]<span class="keyword">byte</span>(<span class="keyword">string</span>))</span><br><span class="line">bs := hash.Sum(<span class="literal">nil</span>)</span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">"%x"</span>, bs)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="运行结果："><a href="#运行结果：" class="headerlink" title="运行结果："></a>运行结果：</h5><p>185f8db32271fe25f561a6fc938b2e264306ec304eda518007d1764826381969<br>其中，hash.Write()写入需要生成哈希的内容，h.Sum()添加额外的[]byte到当前的哈希中。</p><a id="more"></a><h5 id="生成符合某一条件的哈希："><a href="#生成符合某一条件的哈希：" class="headerlink" title="生成符合某一条件的哈希："></a>生成符合某一条件的哈希：</h5><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"crypto/sha256"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">isvhd</span><span class="params">(hash <span class="keyword">string</span>, diff <span class="keyword">int</span>)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> i <span class="keyword">int</span></span><br><span class="line"><span class="keyword">for</span> i = <span class="number">0</span>; i &lt; <span class="built_in">len</span>(hash); i++ &#123;</span><br><span class="line"><span class="keyword">if</span> hash[i] != <span class="string">'8'</span> &#123;   <span class="comment">//哈希字符串的前diff个字符是否为8，如果不为8，结束循环。</span></span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> i &gt;= diff</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">nonce := <span class="number">0</span></span><br><span class="line">hash := <span class="string">""</span></span><br><span class="line"></span><br><span class="line">shaobj := sha256.New()</span><br><span class="line"></span><br><span class="line">prehash := <span class="string">"0000fedaa499741317a18f1ad626f933776ad24822cb422634978bfe8005c94b"</span></span><br><span class="line"><span class="comment">//prehash := "185f8db32271fe25f561a6fc938b2e264306ec304eda518007d1764826381969"</span></span><br><span class="line">count := <span class="number">0</span>     <span class="comment">//循环的次数</span></span><br><span class="line"><span class="keyword">for</span> !isvhd(hash, <span class="number">4</span>) &#123;</span><br><span class="line">nonce++</span><br><span class="line">input := <span class="string">"100"</span> + prehash + <span class="string">"Thu, 26 Apr 2018 03:30:54 GMT"</span> + <span class="string">"A -&gt; B 1000"</span> + <span class="keyword">string</span>(nonce)</span><br><span class="line">shaobj.Write([]<span class="keyword">byte</span>(input))</span><br><span class="line">hash = fmt.Sprintf(<span class="string">"%x"</span>, shaobj.Sum(<span class="literal">nil</span>))</span><br><span class="line">fmt.Println(hash)</span><br><span class="line">count++</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">"count:"</span>, count)</span><br><span class="line">fmt.Println(<span class="string">"nonce:"</span>, nonce)</span><br><span class="line">fmt.Println(hash)</span><br><span class="line">fmt.Println(<span class="built_in">len</span>(hash))     <span class="comment">//哈希字符串的长度</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="运行结果：-1"><a href="#运行结果：-1" class="headerlink" title="运行结果："></a>运行结果：</h5><p>············<br>0c7d465c78faf8dcc359343df18d535497b6dee228577f84b236e908193c6522<br>8888448863c33dff9acdc99dc6b85ca3329716c4d6fa3f51a540e2b977347ac6<br>count: 11743<br>nonce: 11743<br>8888448863c33dff9acdc99dc6b85ca3329716c4d6fa3f51a540e2b977347ac6<br>64</p><h5 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h5><p>isvhd（）函数用来判断生成的哈希内容是否满足某一条件，此处为判断生成的哈希数，前4位数是否为8。若不满足这一条件，则给nonce加1，再次生成哈希，直到生成一个前4位数均为8的哈希，结束循环。<br>生成了一个前四位数为8的哈希，哈希字符串长度为64，循环了11743次。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用go语言简单实现SHA256哈希算法：&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;crypto/sha256&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; := &lt;span class=&quot;string&quot;&gt;&quot;Hello&quot;&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;//需要哈希的字符串内容&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	hash := sha256.New()   &lt;span class=&quot;comment&quot;&gt;//声明sha256哈希函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	hash.Write([]&lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	bs := hash.Sum(&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fmt.Printf(&lt;span class=&quot;string&quot;&gt;&quot;%x&quot;&lt;/span&gt;, bs)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;运行结果：&quot;&gt;&lt;a href=&quot;#运行结果：&quot; class=&quot;headerlink&quot; title=&quot;运行结果：&quot;&gt;&lt;/a&gt;运行结果：&lt;/h5&gt;&lt;p&gt;185f8db32271fe25f561a6fc938b2e264306ec304eda518007d1764826381969&lt;br&gt;其中，hash.Write()写入需要生成哈希的内容，h.Sum()添加额外的[]byte到当前的哈希中。&lt;/p&gt;
    
    </summary>
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="sha256哈希算法" scheme="http://yoursite.com/tags/sha256%E5%93%88%E5%B8%8C%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>用go语言爬虫珍爱网所有城市网址</title>
    <link href="http://yoursite.com/2018/04/20/%E7%94%A8go%E8%AF%AD%E8%A8%80%E7%88%AC%E8%99%AB%E7%8F%8D%E7%88%B1%E7%BD%91%E6%89%80%E6%9C%89%E5%9F%8E%E5%B8%82%E7%BD%91%E5%9D%80/"/>
    <id>http://yoursite.com/2018/04/20/用go语言爬虫珍爱网所有城市网址/</id>
    <published>2018-04-20T13:04:21.000Z</published>
    <updated>2018-05-14T15:46:34.421Z</updated>
    
    <content type="html"><![CDATA[<h5 id="整理：房玉辉"><a href="#整理：房玉辉" class="headerlink" title="整理：房玉辉"></a>整理：房玉辉</h5><h5 id="博客：https-charlienike-github-io"><a href="#博客：https-charlienike-github-io" class="headerlink" title="博客：https://charlienike.github.io"></a>博客：<a href="https://charlienike.github.io" target="_blank" rel="noopener">https://charlienike.github.io</a></h5><h3 id="爬虫珍爱网系列文章"><a href="#爬虫珍爱网系列文章" class="headerlink" title="爬虫珍爱网系列文章"></a><a href="https://charlienike.github.io/tags/go语言爬虫/" target="_blank" rel="noopener">爬虫珍爱网系列文章</a></h3><h4 id="go语言爬虫入门第一课"><a href="#go语言爬虫入门第一课" class="headerlink" title="go语言爬虫入门第一课"></a>go语言爬虫入门第一课</h4><h5 id="1、查看网站编码格式"><a href="#1、查看网站编码格式" class="headerlink" title="1、查看网站编码格式"></a>1、查看网站编码格式</h5><p>工具：<a href="http://www.jetbrains.com/go/?fromMenu" target="_blank" rel="noopener">GoLand</a>，<a href="https://www.google.cn/chrome/" target="_blank" rel="noopener">Chrome浏览器</a>，<br><a href="http://www.zhenai.com/" target="_blank" rel="noopener">珍爱网</a> 所有城市页面 <a href="http://www.zhenai.com/zhenghun" target="_blank" rel="noopener">http://www.zhenai.com/zhenghun</a><br><img src="http://p83c9zj44.bkt.clouddn.com/%E7%8F%8D%E7%88%B1%E7%BD%91%E6%89%80%E6%9C%89%E5%9F%8E%E5%B8%82%E9%A1%B5%E9%9D%A2.png" alt="所有城市页面"><br>首先右键鼠标，查看网页源代码，查看网站编码格式，这里以<a href="http://www.qqxiuzi.cn/zh/hanzi-gbk-bianma.php" target="_blank" rel="noopener">gbk</a>格式为例，<img src="http://p83c9zj44.bkt.clouddn.com/%E7%BC%96%E7%A0%81%E6%A0%BC%E5%BC%8F1.png" alt="源代码">，<img src="http://p83c9zj44.bkt.clouddn.com/%E7%BC%96%E7%A0%81%E6%A0%BC%E5%BC%8F2.png" alt="编码格式"><br><a id="more"></a></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"net/http"</span></span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"golang.org/x/text/transform"</span></span><br><span class="line"><span class="string">"golang.org/x/text/encoding/simplifiedchinese"</span></span><br><span class="line"><span class="string">"io/ioutil"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> cityListURL = <span class="string">"http://www.zhenai.com/zhenghun"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">resp, err := http.Get(cityListURL)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err) <span class="comment">//如果err不为空,说明出现错误数据，Panic结束程序。</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">defer</span> resp.Body.Close() <span class="comment">//关闭数据解析请求</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> resp.StatusCode != http.StatusOK &#123;</span><br><span class="line">fmt.Println(<span class="string">"Error:Status Code:"</span>, resp.StatusCode)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 以gbk格式读取网站源代码，</span></span><br><span class="line">utf8Reader := transform.NewReader(resp.Body, simplifiedchinese.GBK.NewDecoder())</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 读取网页所有数据，ReadAll方法返回值为[]byte字节数组，和err</span></span><br><span class="line">allData, err1 := ioutil.ReadAll(utf8Reader)</span><br><span class="line"><span class="keyword">if</span> err1 != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err1)</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">// 将字节数组转换为字符串，并打印输出</span></span><br><span class="line">fmt.Println(<span class="keyword">string</span>(allData))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>网站编码格式有很多种，比如还有utf-8等格式，为了更好的封装，我们来写个方法，自动判断网站的编码格式，</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">determinEncoding</span><span class="params">(r io.Reader)</span> <span class="title">encoding</span>.<span class="title">Encoding</span></span> &#123;</span><br><span class="line">bytes, err := bufio.NewReader(r).Peek(<span class="number">1024</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> unicode.UTF8</span><br><span class="line">&#125;</span><br><span class="line">e, _, _ := charset.DetermineEncoding(bytes, <span class="string">""</span>)</span><br><span class="line"><span class="keyword">return</span> e</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该方法的参数是resp.body,返回值即是编码格式。</p><h5 id="2、观察目标字段"><a href="#2、观察目标字段" class="headerlink" title="2、观察目标字段"></a>2、观察目标字段</h5><p>看一下需要获取的字段长什么样，Chrome浏览器查看，<img src="http://p83c9zj44.bkt.clouddn.com/%E7%BD%91%E5%9D%80%E6%BA%90%E7%A0%81%E6%A0%BC%E5%BC%8F.png" alt="目标字段源码"><br>在goland控制台打印，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;dd&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;a href=&quot;http://www.zhenai.com/zhenghun/eerduosi&quot;</span><br><span class="line">class=&quot;&quot;&gt;鄂尔多斯&lt;/a&gt;</span><br><span class="line"></span><br><span class="line">&lt;a href=&quot;http://www.zhenai.com/zhenghun/enshi&quot;</span><br><span class="line">class=&quot;&quot;&gt;恩施&lt;/a&gt;</span><br><span class="line"></span><br><span class="line">&lt;a href=&quot;http://www.zhenai.com/zhenghun/ezhou&quot;</span><br><span class="line">class=&quot;&quot;&gt;鄂州&lt;/a&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/dd&gt;</span><br></pre></td></tr></table></figure><p>可以看到，目标字段是很简单的格式，很容易获取，每一个a标签就是一个目标字段，正则表达式为：<br><code>&lt;a href=&quot;(http://www.zhenai.com/zhenghun/[a-z0-9]+)&quot;[^&gt;]+&gt;([^&lt;]+)&lt;/a&gt;</code><br>该正则表达式中有两个()，第一个括号中为目标网址，第二个括号中为城市名。</p><h5 id="3、获取目标字段"><a href="#3、获取目标字段" class="headerlink" title="3、获取目标字段"></a>3、获取目标字段</h5><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">match := regexp.MustCompile(<span class="string">`&lt;a href="(http://www.zhenai.com/zhenghun/[a-z0-9]+)"[^&gt;]+&gt;([^&lt;]+)&lt;/a&gt;`</span>)</span><br><span class="line"></span><br><span class="line">bytes := match.FindAllSubmatch(allData, <span class="number">-1</span>)</span><br></pre></td></tr></table></figure><p>regexp.MustCompile用来在文本中查找匹配正则表达式的内容。<br>FindAllSubmatch方法的第2个参数表示查找次数，-1表示不限次数，查找多少次，就返回多少个字节数组；返回值是一个字节数组，里面有三个元素，是匹配到的结果，及其分组内容，返回值中的第 0 个元素是整个正则表达式的匹配结果，分组顺序按照“(”的出现次序而定，所以第 1 个元素是网址，第 2 个元素是城市名，接下来只需要遍历返回的字节数组，转化为字符串输出及得到最终结果。<br>最后，全部代码如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"net/http"</span></span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"io/ioutil"</span></span><br><span class="line"><span class="string">"regexp"</span></span><br><span class="line"><span class="string">"io"</span></span><br><span class="line"><span class="string">"golang.org/x/text/encoding"</span></span><br><span class="line"><span class="string">"bufio"</span></span><br><span class="line"><span class="string">"golang.org/x/net/html/charset"</span></span><br><span class="line"><span class="string">"golang.org/x/text/transform"</span></span><br><span class="line"><span class="string">"golang.org/x/text/encoding/simplifiedchinese"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> cityListURL = <span class="string">"http://www.zhenai.com/zhenghun"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">resp, err := http.Get(cityListURL)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err) <span class="comment">//如果err不为空,说明出现错误数据，Panic结束程序。</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">defer</span> resp.Body.Close() <span class="comment">//关闭数据解析请求</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> resp.StatusCode != http.StatusOK &#123;</span><br><span class="line">fmt.Println(<span class="string">"Error:Status Code:"</span>, resp.StatusCode)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">utf8Reader := transform.NewReader(resp.Body, simplifiedchinese.GBK.NewDecoder())</span><br><span class="line"><span class="comment">//e := determinEncoding(resp.Body)</span></span><br><span class="line"><span class="comment">//utf8Reader := transform.NewReader(resp.Body, e.NewDecoder())</span></span><br><span class="line"></span><br><span class="line">allData, err1 := ioutil.ReadAll(utf8Reader)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err1 != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err1)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//fmt.Println(string(allData))</span></span><br><span class="line"></span><br><span class="line">match := regexp.MustCompile(<span class="string">`&lt;a href="(http://www.zhenai.com/zhenghun/[a-z0-9]+)"[^&gt;]+&gt;([^&lt;]+)&lt;/a&gt;`</span>)</span><br><span class="line"></span><br><span class="line">bytes := match.FindAllSubmatch(allData, <span class="number">50</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> key, value := <span class="keyword">range</span> bytes &#123;</span><br><span class="line">fmt.Println(key+<span class="number">1</span>, <span class="string">"城市："</span>, <span class="keyword">string</span>(value[<span class="number">2</span>]), <span class="string">"网址："</span>, <span class="keyword">string</span>(value[<span class="number">1</span>]))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">determinEncoding</span><span class="params">(r io.Reader)</span> <span class="title">encoding</span>.<span class="title">Encoding</span></span> &#123;</span><br><span class="line">bytes, err := bufio.NewReader(r).Peek(<span class="number">1024</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line">e, _, _ := charset.DetermineEncoding(bytes, <span class="string">""</span>)</span><br><span class="line"><span class="keyword">return</span> e</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> 城市： 阿坝 网址： http:<span class="comment">//www.zhenai.com/zhenghun/aba</span></span><br><span class="line"><span class="number">2</span> 城市： 阿克苏 网址： http:<span class="comment">//www.zhenai.com/zhenghun/akesu</span></span><br><span class="line">......</span><br><span class="line"><span class="number">468</span> 城市： 自贡 网址： http:<span class="comment">//www.zhenai.com/zhenghun/zigong</span></span><br><span class="line"><span class="number">469</span> 城市： 资阳 网址： http:<span class="comment">//www.zhenai.com/zhenghun/ziyang1</span></span><br><span class="line"><span class="number">470</span> 城市： 遵义 网址： http:<span class="comment">//www.zhenai.com/zhenghun/zunyi</span></span><br></pre></td></tr></table></figure><font color="#FF0000" size="5">版权声明：博客中的文章版权归博主所有，未经授权，禁止转载，转载请注明出处，合作请点击“关于我”，扫码添加微信</font>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;整理：房玉辉&quot;&gt;&lt;a href=&quot;#整理：房玉辉&quot; class=&quot;headerlink&quot; title=&quot;整理：房玉辉&quot;&gt;&lt;/a&gt;整理：房玉辉&lt;/h5&gt;&lt;h5 id=&quot;博客：https-charlienike-github-io&quot;&gt;&lt;a href=&quot;#博客：https-charlienike-github-io&quot; class=&quot;headerlink&quot; title=&quot;博客：https://charlienike.github.io&quot;&gt;&lt;/a&gt;博客：&lt;a href=&quot;https://charlienike.github.io&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://charlienike.github.io&lt;/a&gt;&lt;/h5&gt;&lt;h3 id=&quot;爬虫珍爱网系列文章&quot;&gt;&lt;a href=&quot;#爬虫珍爱网系列文章&quot; class=&quot;headerlink&quot; title=&quot;爬虫珍爱网系列文章&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://charlienike.github.io/tags/go语言爬虫/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;爬虫珍爱网系列文章&lt;/a&gt;&lt;/h3&gt;&lt;h4 id=&quot;go语言爬虫入门第一课&quot;&gt;&lt;a href=&quot;#go语言爬虫入门第一课&quot; class=&quot;headerlink&quot; title=&quot;go语言爬虫入门第一课&quot;&gt;&lt;/a&gt;go语言爬虫入门第一课&lt;/h4&gt;&lt;h5 id=&quot;1、查看网站编码格式&quot;&gt;&lt;a href=&quot;#1、查看网站编码格式&quot; class=&quot;headerlink&quot; title=&quot;1、查看网站编码格式&quot;&gt;&lt;/a&gt;1、查看网站编码格式&lt;/h5&gt;&lt;p&gt;工具：&lt;a href=&quot;http://www.jetbrains.com/go/?fromMenu&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GoLand&lt;/a&gt;，&lt;a href=&quot;https://www.google.cn/chrome/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Chrome浏览器&lt;/a&gt;，&lt;br&gt;&lt;a href=&quot;http://www.zhenai.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;珍爱网&lt;/a&gt; 所有城市页面 &lt;a href=&quot;http://www.zhenai.com/zhenghun&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://www.zhenai.com/zhenghun&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;http://p83c9zj44.bkt.clouddn.com/%E7%8F%8D%E7%88%B1%E7%BD%91%E6%89%80%E6%9C%89%E5%9F%8E%E5%B8%82%E9%A1%B5%E9%9D%A2.png&quot; alt=&quot;所有城市页面&quot;&gt;&lt;br&gt;首先右键鼠标，查看网页源代码，查看网站编码格式，这里以&lt;a href=&quot;http://www.qqxiuzi.cn/zh/hanzi-gbk-bianma.php&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;gbk&lt;/a&gt;格式为例，&lt;img src=&quot;http://p83c9zj44.bkt.clouddn.com/%E7%BC%96%E7%A0%81%E6%A0%BC%E5%BC%8F1.png&quot; alt=&quot;源代码&quot;&gt;，&lt;img src=&quot;http://p83c9zj44.bkt.clouddn.com/%E7%BC%96%E7%A0%81%E6%A0%BC%E5%BC%8F2.png&quot; alt=&quot;编码格式&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="爬虫" scheme="http://yoursite.com/categories/%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="go语言爬虫" scheme="http://yoursite.com/tags/go%E8%AF%AD%E8%A8%80%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>mac下生成RSA私钥和公钥</title>
    <link href="http://yoursite.com/2017/05/01/mac%E4%B8%8B%E7%94%9F%E6%88%90rsa%E7%A7%81%E9%92%A5%E5%92%8C%E5%85%AC%E9%92%A5/"/>
    <id>http://yoursite.com/2017/05/01/mac下生成rsa私钥和公钥/</id>
    <published>2017-05-01T02:26:05.000Z</published>
    <updated>2018-05-20T04:35:09.319Z</updated>
    
    <content type="html"><![CDATA[<h3 id="整理：房玉辉"><a href="#整理：房玉辉" class="headerlink" title="整理：房玉辉"></a>整理：房玉辉</h3><h3 id="博客：https-charlienike-github-io"><a href="#博客：https-charlienike-github-io" class="headerlink" title="博客：https://charlienike.github.io"></a>博客：<a href="https://charlienike.github.io" target="_blank" rel="noopener">https://charlienike.github.io</a></h3><h2 id="第一种方式（执行第2步之后，需要输入两次开机密码）："><a href="#第一种方式（执行第2步之后，需要输入两次开机密码）：" class="headerlink" title="第一种方式（执行第2步之后，需要输入两次开机密码）："></a>第一种方式（执行第2步之后，需要输入两次开机密码）：</h2><p>打开终端：输入：openssl<br>依次输入命令：<br><strong>1、制作私钥</strong><br>genrsa -out rsa_private_key.pem 2048<br><strong>2、设置私钥为PKCS8格式</strong><br>pkcs8 -topk8 -inform PEM -in rsa_private_key.pem -outform PEM</p><a id="more"></a><font color="#FF0000" size="5"><strong>注意：</strong>执行完第2步，终端会输出以—–BEGIN ENCRYPTED PRIVATE KEY—–开头，以—–END ENCRYPTED PRIVATE KEY—–结尾的私钥，不是<strong>RSA</strong>私钥：<img src="http://p83c9zj44.bkt.clouddn.com/%E6%8E%A7%E5%88%B6%E5%8F%B0%E8%BE%93%E5%87%BA%E7%9A%84%E7%A7%81%E9%92%A5.jpeg" alt="">记住不要用此私钥，可以把这里的私钥保存一下，查看其长度，为1784。</font><br>此时，/Users/（用户名）目录下也有了名为rsa_private_key.pem的私钥文件，可用记事本查看一下，<img src="http://p83c9zj44.bkt.clouddn.com/%E5%9C%A8%E7%94%A8%E6%88%B7%E5%90%8D%E4%B8%8B%E7%94%9F%E6%88%90%E7%9A%84%E7%A7%81%E9%92%A5%EF%BC%88%E8%AE%B0%E4%BA%8B%E6%9C%AC%E6%89%93%E5%BC%80%EF%BC%89.jpeg" alt=""><br><font color="red" size="5" face="黑体">是以—–BEGIN RSA PRIVATE KEY—–开头，以—–END RSA PRIVATE KEY—–结尾。这才是<strong>RSA</strong>私钥。</font><br><strong>3、通过私钥产生公钥</strong><br>rsa -in rsa_private_key.pem -pubout -out rsa_public_key.pem<br><br>执行完第三步<br>/Users/（用户名）<br>目录下就已经有了两个文件：<br>rsa_private_key.pem<br>rsa_public_key.pem<br>前者为私钥，后者为公钥。<br>此时可以用记事本打开文件，公钥长度为450，私钥长度为1678，<font color="black">私钥与刚才控制台输出的私钥不一样</font><br>也可以用命令行在终端查看秘钥：cat /Users/charlienike/rsa_private_key.pem<br><br>## 第二种方式（不需要输密码）<br><br>打开终端：输入 openssl<br>依次输入命令：<br>1、genrsa -out rsa_private_key.pem 2048<br>2、pkcs8 -topk8 -inform PEM -in rsa_private_key.pem -outform PEM –nocrypt<br>3、rsa -in rsa_private_key.pem -pubout -out rsa_public_key.pem<br>命令执行过程中控制台不会输出私钥<img src="http://p83c9zj44.bkt.clouddn.com/%E7%AC%AC%E4%BA%8C%E7%A7%8D%E6%96%B9%E5%BC%8F%E7%94%9F%E6%88%90%E7%A7%98%E9%92%A5.jpeg" alt=""><br>最后/Users/(用户名)目录下会生成两个文件，一个公钥，一个私钥，用记事本打开（或者用终端：cat 文件路径），公钥长度为450，私钥长度为1674。<br><font color="gree">私钥的长度与第一种方式生成的私钥不一样长（1678、1674）。</font><p><strong>注意：RSA</strong>私钥是以—–BEGIN RSA PRIVATE KEY—–开头，以—–END RSA PRIVATE KEY—–结尾，公钥是以—–BEGIN PUBLIC KEY—–开头，以—–END PUBLIC KEY—–结尾，第一种方式执行过程中终端输出的并不是<strong>RSA</strong>私钥。<br>两种方式的不同是第二种方式的第2条命令后面多了个<font color="black">–nocrypt</font>，第二种方式执行过程中不会输出私钥，也不需要输入密码，因此推荐使用第二种方式，以避免混淆。</p><font color="#FF0000" size="5">版权声明：博客中的文章版权归博主所有，未经授权，禁止转载，转载请注明出处，合作请点击“关于我”，扫码添加微信</font>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;整理：房玉辉&quot;&gt;&lt;a href=&quot;#整理：房玉辉&quot; class=&quot;headerlink&quot; title=&quot;整理：房玉辉&quot;&gt;&lt;/a&gt;整理：房玉辉&lt;/h3&gt;&lt;h3 id=&quot;博客：https-charlienike-github-io&quot;&gt;&lt;a href=&quot;#博客：https-charlienike-github-io&quot; class=&quot;headerlink&quot; title=&quot;博客：https://charlienike.github.io&quot;&gt;&lt;/a&gt;博客：&lt;a href=&quot;https://charlienike.github.io&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://charlienike.github.io&lt;/a&gt;&lt;/h3&gt;&lt;h2 id=&quot;第一种方式（执行第2步之后，需要输入两次开机密码）：&quot;&gt;&lt;a href=&quot;#第一种方式（执行第2步之后，需要输入两次开机密码）：&quot; class=&quot;headerlink&quot; title=&quot;第一种方式（执行第2步之后，需要输入两次开机密码）：&quot;&gt;&lt;/a&gt;第一种方式（执行第2步之后，需要输入两次开机密码）：&lt;/h2&gt;&lt;p&gt;打开终端：输入：openssl&lt;br&gt;依次输入命令：&lt;br&gt;&lt;strong&gt;1、制作私钥&lt;/strong&gt;&lt;br&gt;genrsa -out rsa_private_key.pem 2048&lt;br&gt;&lt;strong&gt;2、设置私钥为PKCS8格式&lt;/strong&gt;&lt;br&gt;pkcs8 -topk8 -inform PEM -in rsa_private_key.pem -outform PEM&lt;/p&gt;
    
    </summary>
    
      <category term="密码学" scheme="http://yoursite.com/categories/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
    
      <category term="RSA秘钥" scheme="http://yoursite.com/tags/RSA%E7%A7%98%E9%92%A5/"/>
    
  </entry>
  
</feed>
