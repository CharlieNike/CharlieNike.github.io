<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CharlieNike</title>
  
  <subtitle>房玉辉区块链博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-05-08T15:15:45.811Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>房玉辉</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>在本地网络部署super—dictionary智能合约</title>
    <link href="http://yoursite.com/2018/05/03/%E5%9C%A8localhost%E9%83%A8%E7%BD%B2super%E2%80%94dictionary%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/"/>
    <id>http://yoursite.com/2018/05/03/在localhost部署super—dictionary智能合约/</id>
    <published>2018-05-03T02:10:00.000Z</published>
    <updated>2018-05-08T15:15:45.811Z</updated>
    
    <content type="html"><![CDATA[<h5 id="整理：房玉辉"><a href="#整理：房玉辉" class="headerlink" title="整理：房玉辉"></a>整理：房玉辉</h5><h5 id="博客：https-charlienike-github-io"><a href="#博客：https-charlienike-github-io" class="headerlink" title="博客：https://charlienike.github.io"></a>博客：<a href="https://charlienike.github.io" target="_blank" rel="noopener">https://charlienike.github.io</a></h5><h3 id="星云链Dapp开发系列"><a href="#星云链Dapp开发系列" class="headerlink" title="星云链Dapp开发系列"></a>星云链Dapp开发系列</h3><h4 id="在本地网络（localhost）部署super-dictionary智能合约"><a href="#在本地网络（localhost）部署super-dictionary智能合约" class="headerlink" title="在本地网络（localhost）部署super-dictionary智能合约"></a>在本地网络（localhost）部署super-dictionary智能合约</h4><h6 id="1、解决本地交易网络错误问题："><a href="#1、解决本地交易网络错误问题：" class="headerlink" title="1、解决本地交易网络错误问题："></a>1、解决本地交易网络错误问题：</h6><p>进入go/src/github.com/nebulasio/go-nebulas/conf/default文件夹，打开config.conf文件，找到以下代码：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">rpc &#123;</span><br><span class="line">    rpc_listen: [<span class="string">"0.0.0.0:8684"</span>]</span><br><span class="line">    http_listen: [<span class="string">"0.0.0.0:8685"</span>]</span><br><span class="line">    http_module: [<span class="string">"api"</span>,<span class="string">"admin"</span>]</span><br><span class="line">    # HTTP CORS allowed origins</span><br><span class="line">    # http_cors: []</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>去掉最后一行代码的注释，并更改如下：<br><code>http_cors: [&quot;*&quot;]</code></p><a id="more"></a><h6 id="2、进入super-dictionary-master-lib文件夹："><a href="#2、进入super-dictionary-master-lib文件夹：" class="headerlink" title="2、进入super-dictionary-master/lib文件夹："></a>2、进入super-dictionary-master/lib文件夹：</h6><p>打开nebPay.js文件：<br>找到第四行代码：<br><code>var payUrl = &quot;http://18.221.150.42/api/pay&quot;;</code><br>更改为：<br><code>var payUrl = &quot;http://localhost:8685/api/pay&quot;;</code></p><h6 id="3、启动节点："><a href="#3、启动节点：" class="headerlink" title="3、启动节点："></a>3、启动节点：</h6><p>打开第一个终端窗口，启动第一个星云节点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd $GOPATH/src/github.com/nebulasio/go-nebulas</span><br><span class="line">./neb -c conf/default/config.conf</span><br></pre></td></tr></table></figure><p>再打开一个终端窗口，启动第一个矿工节点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd $GOPATH/src/github.com/nebulasio/go-nebulas</span><br><span class="line">./neb -c conf/example/miner.conf</span><br></pre></td></tr></table></figure><h6 id="4、部署合约："><a href="#4、部署合约：" class="headerlink" title="4、部署合约："></a>4、部署合约：</h6><p>打开web-wallet钱包，部署super-dictionary智能合约到星云链localhost网络：<br>进入web-wallet文件夹，用浏览器打开index.html文件，点击合约，再点击部署，找到super-dictionary-master/smartContract文件夹下的super-dictionary.js文件，将全部代码粘贴到合约代码框内：<br><img src="http://p83c9zj44.bkt.clouddn.com/%E9%83%A8%E7%BD%B2%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6.jpeg" alt=""><br>选择钱包文件，输入密码，点击解锁，再点击测试，<br><img src="http://p83c9zj44.bkt.clouddn.com/%E6%B5%8B%E8%AF%95.jpeg" alt=""><br>再点击提交：<br><img src="http://p83c9zj44.bkt.clouddn.com/%E6%8F%90%E4%BA%A4.jpeg" alt=""><br>保存好合约地址：<br><code>n1wfeKn7GSjo8GbAE64CgUPyxwqLrpWWLnK</code><br>点击交易哈希，查看交易状态，下图为部署成功：<br><img src="http://p83c9zj44.bkt.clouddn.com/%E9%83%A8%E7%BD%B2%E6%88%90%E5%8A%9F.png" alt=""></p><h6 id="5、执行、调用合约，与前端交互："><a href="#5、执行、调用合约，与前端交互：" class="headerlink" title="5、执行、调用合约，与前端交互："></a>5、执行、调用合约，与前端交互：</h6><p>进入super-dictionary-master文件夹，用开发工具打开index.html文件，找到第190行代码，将合约地址粘贴过来：<br><code>var dappAddress = &quot;n1wfeKn7GSjo8GbAE64CgUPyxwqLrpWWLnK&quot;;</code><br>保存后，用浏览器打开index.html文件，随便输入“比特币”一词，可以看到，没有释义，但是底下有一句话：</p><blockquote><p>Failed to find related information. Do you want to add infromation for “比特币”?</p></blockquote><p><img src="http://p83c9zj44.bkt.clouddn.com/%E6%89%A7%E8%A1%8C%E5%90%88%E7%BA%A6.jpeg" alt=""><br>并且add可以点击，点击add后可以添加释义，输入如下释义：<br>“比特币（BitCoin）的概念最初由中本聪在2009年提出，根据中本聪的思路设计发布的开源软件以及建构其上的P2P网络。比特币是一种P2P形式的数字货币。”<br><img src="http://p83c9zj44.bkt.clouddn.com/%E6%B7%BB%E5%8A%A0%E9%87%8A%E4%B9%89.jpeg" alt=""><br>点击submit，之后会弹出WebExtensionWallet钱包页面，选择localhost当地钱包文件，输入密码“passphrase”，<br><img src="http://p83c9zj44.bkt.clouddn.com/%E6%8F%90%E4%BA%A4submit.jpeg" alt=""><br>点击生成交易，<br><img src="http://p83c9zj44.bkt.clouddn.com/%E7%94%9F%E6%88%90%E4%BA%A4%E6%98%93.jpeg" alt=""><br>再点击交易确认，<br><img src="http://p83c9zj44.bkt.clouddn.com/%E4%BA%A4%E6%98%93%E7%A1%AE%E8%AE%A4.jpeg" alt=""><br>正在打包：<br><img src="http://p83c9zj44.bkt.clouddn.com/%E7%A1%AE%E8%AE%A4.jpeg" alt=""><br>交易打包成功：<br><img src="http://p83c9zj44.bkt.clouddn.com/%E9%87%8A%E4%B9%89%E6%88%90%E5%8A%9F.jpeg" alt=""><br>查询，如图所示：<br><img src="http://p83c9zj44.bkt.clouddn.com/local%E6%9F%A5%E8%AF%8D.jpeg" alt=""><br>至此，super-dictionary智能合约部署成功，前端调用合约成功。</p><font color="#FF0000" size="10">版权声明：博客中的文章版权归博主所有，未经授权，禁止转载，转载请注明出处，合作请点击“关于我”，扫码添加微信</font>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;整理：房玉辉&quot;&gt;&lt;a href=&quot;#整理：房玉辉&quot; class=&quot;headerlink&quot; title=&quot;整理：房玉辉&quot;&gt;&lt;/a&gt;整理：房玉辉&lt;/h5&gt;&lt;h5 id=&quot;博客：https-charlienike-github-io&quot;&gt;&lt;a href=&quot;#博客：https-charlienike-github-io&quot; class=&quot;headerlink&quot; title=&quot;博客：https://charlienike.github.io&quot;&gt;&lt;/a&gt;博客：&lt;a href=&quot;https://charlienike.github.io&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://charlienike.github.io&lt;/a&gt;&lt;/h5&gt;&lt;h3 id=&quot;星云链Dapp开发系列&quot;&gt;&lt;a href=&quot;#星云链Dapp开发系列&quot; class=&quot;headerlink&quot; title=&quot;星云链Dapp开发系列&quot;&gt;&lt;/a&gt;星云链Dapp开发系列&lt;/h3&gt;&lt;h4 id=&quot;在本地网络（localhost）部署super-dictionary智能合约&quot;&gt;&lt;a href=&quot;#在本地网络（localhost）部署super-dictionary智能合约&quot; class=&quot;headerlink&quot; title=&quot;在本地网络（localhost）部署super-dictionary智能合约&quot;&gt;&lt;/a&gt;在本地网络（localhost）部署super-dictionary智能合约&lt;/h4&gt;&lt;h6 id=&quot;1、解决本地交易网络错误问题：&quot;&gt;&lt;a href=&quot;#1、解决本地交易网络错误问题：&quot; class=&quot;headerlink&quot; title=&quot;1、解决本地交易网络错误问题：&quot;&gt;&lt;/a&gt;1、解决本地交易网络错误问题：&lt;/h6&gt;&lt;p&gt;进入go/src/github.com/nebulasio/go-nebulas/conf/default文件夹，打开config.conf文件，找到以下代码：&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;rpc &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rpc_listen: [&lt;span class=&quot;string&quot;&gt;&quot;0.0.0.0:8684&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    http_listen: [&lt;span class=&quot;string&quot;&gt;&quot;0.0.0.0:8685&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    http_module: [&lt;span class=&quot;string&quot;&gt;&quot;api&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;admin&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # HTTP CORS allowed origins&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    # http_cors: []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;去掉最后一行代码的注释，并更改如下：&lt;br&gt;&lt;code&gt;http_cors: [&amp;quot;*&amp;quot;]&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="智能合约" scheme="http://yoursite.com/categories/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/"/>
    
    
      <category term="星云链Dapp开发" scheme="http://yoursite.com/tags/%E6%98%9F%E4%BA%91%E9%93%BEDapp%E5%BC%80%E5%8F%91/"/>
    
      <category term="智能合约" scheme="http://yoursite.com/tags/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/"/>
    
  </entry>
  
  <entry>
    <title>用go语言简单实现SHA256哈希算法</title>
    <link href="http://yoursite.com/2018/05/01/%E7%94%A8go%E8%AF%AD%E8%A8%80%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0SHA256%E5%93%88%E5%B8%8C%E7%AE%97%E6%B3%95%EF%BC%9A/"/>
    <id>http://yoursite.com/2018/05/01/用go语言简单实现SHA256哈希算法：/</id>
    <published>2018-05-01T15:36:20.000Z</published>
    <updated>2018-05-04T14:14:06.373Z</updated>
    
    <content type="html"><![CDATA[<p>用go语言简单实现SHA256哈希算法：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"crypto/sha256"</span></span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">string</span> := <span class="string">"Hello"</span>  <span class="comment">//需要哈希的字符串内容</span></span><br><span class="line"></span><br><span class="line">hash := sha256.New()   <span class="comment">//声明sha256哈希函数</span></span><br><span class="line">hash.Write([]<span class="keyword">byte</span>(<span class="keyword">string</span>))</span><br><span class="line">bs := hash.Sum(<span class="literal">nil</span>)</span><br><span class="line"></span><br><span class="line">fmt.Printf(<span class="string">"%x"</span>, bs)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="运行结果："><a href="#运行结果：" class="headerlink" title="运行结果："></a>运行结果：</h5><p>185f8db32271fe25f561a6fc938b2e264306ec304eda518007d1764826381969<br>其中，hash.Write()写入需要生成哈希的内容，h.Sum()添加额外的[]byte到当前的哈希中。</p><a id="more"></a><h5 id="生成符合某一条件的哈希："><a href="#生成符合某一条件的哈希：" class="headerlink" title="生成符合某一条件的哈希："></a>生成符合某一条件的哈希：</h5><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"crypto/sha256"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">isvhd</span><span class="params">(hash <span class="keyword">string</span>, diff <span class="keyword">int</span>)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> i <span class="keyword">int</span></span><br><span class="line"><span class="keyword">for</span> i = <span class="number">0</span>; i &lt; <span class="built_in">len</span>(hash); i++ &#123;</span><br><span class="line"><span class="keyword">if</span> hash[i] != <span class="string">'8'</span> &#123;   <span class="comment">//哈希字符串的前diff个字符是否为8，如果不为8，结束循环。</span></span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> i &gt;= diff</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">nonce := <span class="number">0</span></span><br><span class="line">hash := <span class="string">""</span></span><br><span class="line"></span><br><span class="line">shaobj := sha256.New()</span><br><span class="line"></span><br><span class="line">prehash := <span class="string">"0000fedaa499741317a18f1ad626f933776ad24822cb422634978bfe8005c94b"</span></span><br><span class="line"><span class="comment">//prehash := "185f8db32271fe25f561a6fc938b2e264306ec304eda518007d1764826381969"</span></span><br><span class="line">count := <span class="number">0</span>     <span class="comment">//循环的次数</span></span><br><span class="line"><span class="keyword">for</span> !isvhd(hash, <span class="number">4</span>) &#123;</span><br><span class="line">nonce++</span><br><span class="line">input := <span class="string">"100"</span> + prehash + <span class="string">"Thu, 26 Apr 2018 03:30:54 GMT"</span> + <span class="string">"A -&gt; B 1000"</span> + <span class="keyword">string</span>(nonce)</span><br><span class="line">shaobj.Write([]<span class="keyword">byte</span>(input))</span><br><span class="line">hash = fmt.Sprintf(<span class="string">"%x"</span>, shaobj.Sum(<span class="literal">nil</span>))</span><br><span class="line">fmt.Println(hash)</span><br><span class="line">count++</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">"count:"</span>, count)</span><br><span class="line">fmt.Println(<span class="string">"nonce:"</span>, nonce)</span><br><span class="line">fmt.Println(hash)</span><br><span class="line">fmt.Println(<span class="built_in">len</span>(hash))     <span class="comment">//哈希字符串的长度</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="运行结果：-1"><a href="#运行结果：-1" class="headerlink" title="运行结果："></a>运行结果：</h5><p>············<br>0c7d465c78faf8dcc359343df18d535497b6dee228577f84b236e908193c6522<br>8888448863c33dff9acdc99dc6b85ca3329716c4d6fa3f51a540e2b977347ac6<br>count: 11743<br>nonce: 11743<br>8888448863c33dff9acdc99dc6b85ca3329716c4d6fa3f51a540e2b977347ac6<br>64</p><h5 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h5><p>isvhd（）函数用来判断生成的哈希内容是否满足某一条件，此处为判断生成的哈希数，前4位数是否为8。若不满足这一条件，则给nonce加1，再次生成哈希，直到生成一个前4位数均为8的哈希，结束循环。<br>生成了一个前四位数为8的哈希，哈希字符串长度为64，循环了11743次。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用go语言简单实现SHA256哈希算法：&lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; main&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;crypto/sha256&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;string&quot;&gt;&quot;fmt&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; := &lt;span class=&quot;string&quot;&gt;&quot;Hello&quot;&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;//需要哈希的字符串内容&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	hash := sha256.New()   &lt;span class=&quot;comment&quot;&gt;//声明sha256哈希函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	hash.Write([]&lt;span class=&quot;keyword&quot;&gt;byte&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	bs := hash.Sum(&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fmt.Printf(&lt;span class=&quot;string&quot;&gt;&quot;%x&quot;&lt;/span&gt;, bs)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&quot;运行结果：&quot;&gt;&lt;a href=&quot;#运行结果：&quot; class=&quot;headerlink&quot; title=&quot;运行结果：&quot;&gt;&lt;/a&gt;运行结果：&lt;/h5&gt;&lt;p&gt;185f8db32271fe25f561a6fc938b2e264306ec304eda518007d1764826381969&lt;br&gt;其中，hash.Write()写入需要生成哈希的内容，h.Sum()添加额外的[]byte到当前的哈希中。&lt;/p&gt;
    
    </summary>
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="go语言" scheme="http://yoursite.com/tags/go%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
</feed>
